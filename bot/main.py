from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.types import Message, WebAppInfo
import asyncio
from dotenv import load_dotenv
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("BOT_TOKEN not found in environment variables")

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /info
INFO_TEXT = """
–ù–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flashcards –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å —É—á–µ–±–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª! üìö –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ–ª–æ–¥—ã —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏, –∏–∑—É—á–∞–π—Ç–µ –∏—Ö –∏ –∑–∞–∫—Ä–µ–ø–ª—è–π—Ç–µ –∑–Ω–∞–Ω–∏—è.

üåê –•–æ—Ç–∏—Ç–µ –∏–∑—É—á–∞—Ç—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏? –°–æ–∑–¥–∞–π—Ç–µ —è–∑—ã–∫–æ–≤—É—é –∫–æ–ª–æ–¥—É! –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π –∏ —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Üí –∏—Å–ø–∞–Ω—Å–∫–∏–π), –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∞ –ø–µ—Ä–µ–≤–æ–¥ –¥–æ–±–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ LibreTranslate. –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏: –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Ä—É—Å—Å–∫–∏–π, –∏—Å–ø–∞–Ω—Å–∫–∏–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –Ω–µ–º–µ—Ü–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π –∏ —è–ø–æ–Ω—Å–∫–∏–π.

–ö–∞–∫ –Ω–∞—á–∞—Ç—å:
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ ¬´–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏¬ª, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ ¬´–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–¥—É¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.
3Ô∏è‚É£ –î–ª—è —è–∑—ã–∫–æ–≤–æ–π –∫–æ–ª–æ–¥—ã –æ—Ç–º–µ—Ç—å—Ç–µ üåê –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫–∏.
4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –∏–∑—É—á–∞–π—Ç–µ —Å–≤–∞–π–ø–∞–º–∏: –≤–ø—Ä–∞–≤–æ ‚Äî –∑–Ω–∞—é, –≤–ª–µ–≤–æ ‚Äî –ø–æ–≤—Ç–æ—Ä–∏—Ç—å.

–£—á–∏—Ç–µ—Å—å –ª–µ–≥–∫–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! üöÄ
"""

@dp.message(Command("start"))
async def start(message: Message):
    logger.info(f"Received /start command from user: {message.from_user.id}")
    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º telegram_id –≤ URL
    web_app_url = f"https://flashcardsapp.ru?telegram_id={message.from_user.id}"
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(
                text="–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏",
                web_app=WebAppInfo(url=web_app_url)
            )]
        ],
        resize_keyboard=True
    )
    await message.answer(
        '–ù–∞–ø–∏—à–∏—Ç–µ /info, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n–ù–∞–∂–º–∏—Ç–µ ¬´–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏¬ª, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:',
        reply_markup=keyboard
    )

@dp.message(Command("info"))
async def info(message: Message):
    logger.info(f"Received /info command from user: {message.from_user.id}")
    await message.answer(INFO_TEXT)

async def main():
    logger.info("Starting bot polling...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
